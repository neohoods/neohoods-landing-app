name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build Angular app
        run: npm run build

      - name: Create Dockerfile
        run: |
          cat > Dockerfile << 'EOF'
          FROM nginx:alpine

          # Copy built Angular app
          COPY dist/neohoods-landing /usr/share/nginx/html

          # Copy nginx configuration
          COPY nginx.conf /etc/nginx/nginx.conf

          # Expose port 80
          EXPOSE 80

          CMD ["nginx", "-g", "daemon off;"]
          EOF

      - name: Create nginx.conf
        run: |
          cat > nginx.conf << 'EOF'
          events {
              worker_connections 1024;
          }

          http {
              include       /etc/nginx/mime.types;
              default_type  application/octet-stream;
              
              sendfile        on;
              keepalive_timeout  65;
              
              server {
                  listen       80;
                  server_name  localhost;
                  root   /usr/share/nginx/html;
                  index  index.html index.htm;
                  
                  location / {
                      try_files $uri $uri/ /index.html;
                  }
                  
                  # Cache static assets
                  location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                      expires 1y;
                      add_header Cache-Control "public, immutable";
                  }
              }
          }
          EOF

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/neohoods/neohoods-landing
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
