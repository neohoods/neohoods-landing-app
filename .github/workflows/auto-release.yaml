name: Auto Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    steps:
      - uses: actions/checkout@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:ci

      - name: Run linting
        run: npm run lint

      - name: Check if release is needed
        id: check-release
        run: |
          if npx standard-version --dry-run | grep -q "no changes"; then
            echo "release=false" >> $GITHUB_OUTPUT
          else
            echo "release=true" >> $GITHUB_OUTPUT
          fi

      - name: Create release
        if: steps.check-release.outputs.release == 'true'
        run: |
          npm run release
          export VERSION=$(cat version.txt)
          echo "app-version=$VERSION" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push changes
        if: steps.check-release.outputs.release == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit --amend -m "$(git log -1 --pretty=%B) [ci skip]"
          git push --follow-tags origin main

      - name: Build and push Docker image
        if: steps.check-release.outputs.release == 'true'
        run: |
          export VERSION=$(cat version.txt)
          echo "app-version=$VERSION" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        if: steps.check-release.outputs.release == 'true'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io/neohoods
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Set up QEMU
        if: steps.check-release.outputs.release == 'true'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        if: steps.check-release.outputs.release == 'true'
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        if: steps.check-release.outputs.release == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/neohoods/neohoods-landing-app:${{ env.app-version }}

      - name: Deploy
        if: steps.check-release.outputs.release == 'true'
        uses: qcastel/github-actions-update-helm@master
        with:
          branch-name: main
          git-release-bot-name: "bot-theopenshelf"
          git-release-bot-email: "bot@theopenshelf.dev"
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          repository: git@github.com:neohoods/neohoods-landing-helm.git
          file-path: charts/neohoods-landing/values.yaml
          yaml-paths: "frontend.image.tag"
          tag: ${{ env.app-version }}
          gpg-enabled: true
          gpg-key-id: ${{ secrets.GPG_KEY_ID }}
          gpg-key: ${{ secrets.GPG_KEY }}
